// 1) If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

// Find the sum of all the multiples of 3 or 5 below 1000.

let sum = 0;
function solve1() {
for(x = 0; x < 1000; x++){
    if(x % 3 === 0 || x % 5 === 0) {
        sum += x
    }
}
console.log(sum)
}
solve1()

//2) Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function sumFib(){
    let sum = 0;
    let fibArray = fib()

    for(let x = 0, n=fibArray.length; x<n; x++) {
        sum += fibArray[x]
        
        }
        console.log(sum)

    }

sumFib()

function fib(){
    let a = 1
    let b = 2
    let nextN = a + b
    let fibArray = []
    while(nextN < 4000000) {
        if(nextN % 2 === 0) {
            fibArray.push(nextN)
        }
        a = b
        b = nextN
        nextN = a + b
    }
    return fibArray
}
